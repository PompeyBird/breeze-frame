<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
        <property name="url" value="${druid.url}" />  
        <property name="username" value="${druid.username}" />  
        <property name="password" value="${druid.password}" />  
        <property name="driverClassName" value="${druid.driverClassName}" />  
        <property name="filters" value="${druid.filters}" />  
  
        <property name="maxActive" value="${druid.maxActive}" />  
        <property name="initialSize" value="${druid.initialSize}" />  
        <property name="maxWait" value="${druid.maxWait}" />  
        <property name="minIdle" value="${druid.minIdle}" />  
  
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />  
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />  
  
        <property name="validationQuery" value="${druid.validationQuery}" />  
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />  
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />  
        <property name="testOnReturn" value="${druid.testOnReturn}" />  
        <property name="maxOpenPreparedStatements"  
            value="${druid.maxOpenPreparedStatements}" />  
        <property name="removeAbandoned" value="${druid.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->  
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->  
        <property name="logAbandoned" value="${druid.logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->  
    </bean>
    
    
	<!-- ========================================针对myBatis的配置项============================== -->
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sql/**/*.xml" />
		<!-- 配置分页插件 -->
		<!-- 
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>dialect=mysql</value>
					</property>
				</bean>
			</array>
		</property>
		 -->
		 <property name="configLocation" value="classpath:config-mybatis.xml"/>
	</bean>  
	<!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="org.bird.breeze.web.*.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
			<ref bean="dataSource"/>
		</property>
    </bean>

    <!-- 事务配置 AOP声明方式-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* org.bird.breeze.*..service.*.*(..))"/>
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
	
	<!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>org.bird.breeze.*.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>

</beans>
